version: '3.9'
services:
  nginx: 
    build: ./nginx
    image: nginx
    container_name: "nginx_container"
    ports:
      - 80:80
    depends_on:
      - scoutifiiapp
  
  scoutifiiapp:
    depends_on:
      - postgres
    build:
      context: ../scoutifii
      dockerfile: Dockerfile
    image: scoutifii:v1
    container_name: "scoutifii_container"
    environment:
      - PORT:8000
    env_file:
      - .env
    ports:
      - 8000:8000
    command: sh -c "chmod +x /app/migrate.sh && sh /app/migrate.sh && /app/entrypoint.sh"
    volumes:
      - staticfiles:/app/staticfiles/
      - .:/app  
  
  postgres:
    container-name: postgres
    image: postgres
    env_file:
      - .env
    volumes:
      - postgres:/data/postgres
    ports:
      -"5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  
  pgadmin:
    container-name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - .env
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      -"5050:80"
    networks:
      - postgres
    restart: unless-stopped
  
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - data:/data
    env_file:
      - .env

  mongo-express:
    image: mongodb-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    env_file:
      - .env

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    env_file:
      - .env
    ports: ["2181:2181"]

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on: [zookeeper]
    ports:
      - "9092:9092"      # host access
      - "29092:29092"    # intra-docker access
    env_file:
      - .env
  
  networks:
    postgres:
      driver: bridge
    default: 
        name: db_network
  
  volumes:
    postgres: {}
    pgadmin: {}
    data: {}
